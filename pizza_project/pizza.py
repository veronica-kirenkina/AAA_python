class Pizza:
    """–ë–∞–∑–æ–≤—ã–π –∫–ª–∞—Å—Å –¥–ª—è –≤—Å–µ—Ö –≤–∏–¥–æ–≤ –ø–∏—Ü—Ü"""

    def __init__(self, size: str = 'L', name: str = None, extra_ingredients: list = []):
        if size not in ['L', 'XL']:
            raise ValueError("–£ –Ω–∞—Å –Ω–µ—Ç –ø–∏—Ü—Ü—ã —Ç–∞–∫–æ–≥–æ —Ä–∞–∑–º–µ—Ä–∞. "
                             "–†–∞–∑–º–µ—Ä –º–æ–∂–µ—Ç –±—ã—Ç—å —Ç–æ–ª—å–∫–æ L –∏–ª–∏ XL.")
        self.size = size
        self.name = name
        self.ingredients = ["tomato sauce", "mozzarella"]
        self.ingredients.extend(extra_ingredients)

    def dict(self) -> dict[str]:
        """
        –ú–µ—Ç–æ–¥ –≤—ã–≤–æ–¥–∏—Ç —Ä–µ—Ü–µ–ø—Ç –≤ –≤–∏–¥–µ —Å–ª–æ–≤–∞—Ä—è
        :return: dict[str]
        """
        return {self.__dict__['name']: ', '.join(self.__dict__['ingredients'])}

    def __eq__(self, other) -> bool:
        """
        –ú–µ—Ç–æ–¥ –ø–æ–∑–≤–æ–ª—è–µ—Ç —Å—Ä–∞–≤–Ω–∏—Ç—å –¥–≤–µ –ø–∏—Ü—Ü—ã –Ω–∞ —Ä–∞–≤–µ–Ω—Å—Ç–≤–æ
        :param self: Pizza
        :param other: Pizza
        :return: bool
        """
        return self.ingredients == other.ingredients and self.size == other.size


class Margherita(Pizza):
    """–ö–ª–∞—Å—Å –ø–∏—Ü—Ü—ã –ú–∞—Ä–≥–∞—Ä–∏—Ç–∞"""

    def __init__(self, size: str = "L"):
        self.name = "Margherita üßÄ"
        self.extra_ingredients = ["tomatoes"]
        super().__init__(size, self.name, self.extra_ingredients)


class Pepperoni(Pizza):
    """–ö–ª–∞—Å—Å –ø–∏—Ü—Ü—ã –ü–µ–ø–ø–µ—Ä–æ–Ω–∏"""

    def __init__(self, size: str = "L"):
        self.name = "Pepperoni üçï"
        self.extra_ingredients = ["pepperoni"]
        super().__init__(size, self.name, self.extra_ingredients)


class Hawaiian(Pizza):
    """–ö–ª–∞—Å—Å –ì–∞–≤–∞–π—Å–∫–æ–π –ø–∏—Ü—Ü—ã"""

    def __init__(self, size: str = "L"):
        self.name = "Hawaiian üçç"
        self.extra_ingredients = ["chicken", "pineapples"]
        super().__init__(size, self.name, self.extra_ingredients)
