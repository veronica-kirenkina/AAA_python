import random
from typing import Callable
from pizza import Pizza, Margherita, Pepperoni, Hawaiian


def log(params: str) -> Callable:
    """
    –î–µ–∫–æ—Ä–∞—Ç–æ—Ä –ª–æ–≥–∏—Ä—É–µ—Ç –≤—Ä–µ–º—è –∏—Å–ø–æ–ª–Ω–µ–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–∏.
    –ü—Ä–∏–Ω–∏–º–∞–µ—Ç —à–∞–±–ª–æ–Ω –∏ –≤—ã–≤–æ–¥–∏—Ç —Å–ª—É—á–∞–π–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ.
    :param params: str
    :return: Callable
    """

    def decorator(func: Callable) -> Callable:
        nonlocal params
        if not isinstance(params, str):
            params = params.__name__ + ' - {}c!'
            print(params.format(random.randint(1, 10)))

        def wrapper(*args, **kwargs):
            print(params.format(random.randint(1, 10)))
            return func(*args, **kwargs)

        return wrapper

    return decorator


@log
def bake(pizza: Pizza):
    """–ì–æ—Ç–æ–≤–∏—Ç –ø–∏—Ü—Ü—É"""


@log('üõµ –¥–æ—Å—Ç–∞–≤–∏–ª–∏ –∑–∞ {} –º–∏–Ω—É—Ç!')
def deliver(pizza: Pizza):
    """–î–æ—Å—Ç–∞–≤–ª—è–µ—Ç –ø–∏—Ü—Ü—É"""


@log('üè† –∑–∞–±—Ä–∞–ª–∏ –∑–∞ {} –º–∏–Ω—É—Ç!')
def pickup(pizza: Pizza):
    """–°–∞–º–æ–≤—ã–≤–æ–∑"""


if __name__ == '__main__':
    bake(Margherita())
    deliver(Hawaiian())
